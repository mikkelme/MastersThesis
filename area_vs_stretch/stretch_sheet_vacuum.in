# --- Basics --- # 
units metal
newton on #newtons 3rd law for pairs
boundary m m m  
atom_style atomic # coarse-grain liquids, solids, metals


# --- Read files --- #
read_data ../config_builder/sheet_vacuum.txt      # sheet 
include ../config_builder/info_sheet_vacuum.in    # import variables

# --- Regions and groups --- #
# Sheet 
region sheet_region block INF INF ${pullblock_yhi} ${pullblock_ylo} INF INF
group sheet region sheet_region

# Pullblocks
region PB_ylow_region  block INF INF INF ${pullblock_yhi} INF INF
region PB_yhigh_region block INF INF ${pullblock_ylo} INF INF INF
group PB_ylow region PB_ylow_region
group PB_yhigh region PB_yhigh_region
group PB_tot union PB_ylow PB_yhigh


# Moving atoms
group free_atoms subtract all PB_tot




#--- Dynamics ---#
variable temp equal 5.0 # Kelvin

mass 1 12.0107 # C

velocity free_atoms create ${temp} 5432373 dist gaussian

neighbor            0.5 bin
neigh_modify        delay 0 every 1 one 10000

# Airebo 
pair_style airebo 6.4 1 1
pair_coeff * * ../potentials/CH.airebo C # C-C

timestep            0.0005
fix                 nve all nve # (microcanonical) 
# fix 2 all balance 1000 1.05 shift xy 10 1.05 # balance number of particles computed on each processor 


# --- Dump --- #
dump 1 all custom 100 sheet_vacuum.data id type x y z vx vy vz






# --- Stretching procedure --- #
# Parameters
variable relax_time equal 1 # [ps]
variable pause_between equal 1 # pause between stretch and contracting[ps]
variable pause_after equal 1 # pause after contracting[ps]
variable stretch_speed_pct equal 0.1 # [% of pattern ylen per picoseconds]
variable stretch_max_pct equal 0.20 


# --- Compute and variables--- #
# Stretch pct
variable stretch_speed equal v_stretch_speed_pct*(v_pullblock_ylo-v_pullblock_yhi) # Henrik used 1,25
variable stretch_time equal $(floor(v_stretch_max_pct/v_stretch_speed_pct/dt))
print "Stretch speed time: $(v_stretch_time) timesteps, $(v_stretch_time*dt) ps"

# Set stretch pct
variable stretch_pct equal 0.0


# Stretch force
compute ylow_force PB_ylow reduce sum fy
compute yhigh_force PB_yhigh reduce sum fy


# --- Output --- #
fix stretch_output all ave/time 1 100 100 v_stretch_pct c_ylow_force c_yhigh_force file stretch.txt
thermo              100
thermo_style custom step time temp v_stretch_pct c_ylow_force c_yhigh_force

# ---  Relax inner part (pattern) of sheet --- #
# Set PB conditions
fix PB_xy_freeze PB_tot move linear 0 0 0 # Zero out force in x-y-plane
fix PB_z_ave PB_tot aveforce NULL NULL 0 # Average force in z-direction (every atom feels same z-force)

print "Stretching, timesteps: $(v_relax_time)"
run  $(floor(v_relax_time/dt)) # [t] = picoseconds

# ---- Stretch sheet ---- #
# Update PB conditions
unfix PB_xy_freeze
fix ylow_move  PB_ylow move linear 0 $(-v_stretch_speed/2) NULL units box
fix yhigh_move PB_yhigh move linear 0 $(v_stretch_speed/2) NULL units box

# Update stretch pct
variable stretch_start equal $(step)
variable stretch_pct equal v_stretch_speed_pct*(step-v_stretch_start)*dt

print "Stretching, timesteps: $(v_stretch_time)"
run ${stretch_time}
 
# --- Pause ---- #
# Update PB conditions
unfix ylow_move
unfix yhigh_move
velocity PB_tot set 0 0 0
fix PB_xy_freeze PB_tot move linear 0 0 0 # Zero out force in x-y-plane

# Update stretch pct
variable actual_stretch_max equal $(v_stretch_pct)
variable stretch_pct equal v_actual_stretch_max

print "Pausing, timesteps: $(v_pause_between)"
run  $(floor(v_pause_between/dt)) # [t] = picoseconds

# ---- Contract sheet back --- #
# Update PB conditions
variable stretch_reverse equal $(step)
variable stretch_pct equal v_stretch_max_pct-v_stretch_speed_pct*(step-v_stretch_reverse)*dt

# Update stretch pct
unfix PB_xy_freeze
fix ylow_move  PB_ylow move linear 0 $(v_stretch_speed/2) NULL units box
fix yhigh_move PB_yhigh move linear 0 $(-v_stretch_speed/2) NULL units box

print "Reverse stretch, timesteps: $(v_stretch_time)"
run ${stretch_time}


# --- Pause ---- #
# Update PB conditions
unfix ylow_move
unfix yhigh_move
velocity PB_tot set 0 0 0
fix PB_xy_freeze PB_tot move linear 0 0 0 # Zero out force in x-y-plane

# Update stretch pct
variable actual_stretch_max equal $(v_stretch_pct)
variable stretch_pct equal v_actual_stretch_max
print "Reverse stretch, timesteps: $(v_pause_after)"
run  $(floor(v_pause_after/dt)) # [t] = picoseconds








