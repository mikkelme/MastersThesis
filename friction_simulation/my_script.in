
variable dt equal 0.001 
variable config_data string sheet_substrate 
variable relax_time equal 0.2 
variable stretch_speed_pct equal 0.05 
variable stretch_max_pct equal 0.4 
variable pause_time1 equal 0.2 
variable F_N equal 6.24150907 
variable pause_time2 equal 0.2 
variable drag_dir_x equal 0 
variable drag_dir_y equal 1 
variable drag_speed equal 0.05 
variable drag_length equal 0.01 
variable K equal 1.8724527210000002 
variable root string .
variable out_ext string _test

# Setup system
include ${root}/setup_sim.in

# ---------- Computes ---------- #
## - Pullblocks - ##
compute PB_ylow_ymax PB_ylow reduce max y   # Lower y-limit for sheet
compute PB_yhigh_ymin PB_yhigh reduce min y # Upper y-limit for sheet

## - Activate computes - ## 
thermo_style custom c_PB_ylow_ymax c_PB_yhigh_ymin 
run 0 # activate compute

# ---------- Derived variables ---------- #
## -- Stretch -- ##
variable S0 equal c_PB_yhigh_ymin-c_PB_ylow_ymax    # start len of inner sheet
variable S_len equal c_PB_yhigh_ymin-c_PB_ylow_ymax # Updated len of inner sheet
variable stretch_pct equal (v_S_len-v_S0)/v_S0  # Updated stretch pct
variable stretch_speed equal v_stretch_speed_pct*v_S0 


# Coordination number
compute coord sheet coord/atom cutoff 2.0
# fix stress sheet ave/atom 1 1 100 c_my_stress[*]


# Stress field
compute peratom sheet stress/atom NULL
variable stress_atom atom sqrt(c_peratom[1]*c_peratom[1]+c_peratom[2]*c_peratom[2]+c_peratom[3]*c_peratom[3])
# variable stress_atom atom sqrt(c_peratom[1]*c_peratom[1]+c_peratom[2]*c_peratom[2])
# variable stress_x_atom atom c_peratom[1]
# variable stress_y_atom atom c_peratom[2]
compute max_stress sheet reduce max v_stress_atom 
fix max sheet ave/time 1 1 1 c_max_stress file max_stress.txt


# compute 2Dchunk sheet chunk/atom bin/2d x center 10.0 y center 10.0
# compute stress sheet stress/atom NULL
# variable press atom -(c_stress[1]+c_stress[2]+c_stress[3])
# compute binpress sheet reduce/chunk 2Dchunk sum v_press
# fix avg sheet ave/time 10 10 100 c_binpress mode vector file ave_stress.txt
# fix stress_dist sheet ave/chunk 1 100 100 2Dchunk c_my_stress[0] file stress.txt


# # set number of bins
# variable nbins index 20
# variable fraction equal 1.0/v_nbins
# # define bins as chunks
# compute cchunk all chunk/atom bin/1d x lower ${fraction} units reduced
# compute stress all stress/atom NULL
# # apply conversion to pressure early since we have no variable style for processing chunks
# variable press atom -(c_stress[1]+c_stress[2]+c_stress[3])/(3.0*vol*${fraction})
# compute binpress all reduce/chunk cchunk sum v_press
# fix avg all ave/time 10 40 400 c_binpress mode vector file ave_stress.txt

# ---------- Output ---------- #
thermo 100
variable dump_freq equal 10 

dump 1 all custom $(v_dump_freq) stretch_system${out_ext}.data id type x y z vx vy vz v_stress_atom # <------------
# fix 1 sheet ave/histo 1 100 100 -0.5 5 5 c_coord mode vector beyond extra file coordination.txt
fix 1 sheet ave/histo 1 100 100 -0.5 5.5 6 c_coord mode vector  file coordination.txt
# dump stress_dump sheet custom $(v_dump_freq) stress_dump.data id type x y z v_stress_atom



# fix output_coord sheet ave/time 1 100 100 c_coord file coordination.txt
# fix output_coord all ave/atom 1 100 100 c_my_stress[1] 
# fix ave_coord sheet ave/atom 1 100 100 c_coord[0] 
# dump output_coord sheet custom 100 coordination.txt c_coord
# dump 2 sheet custom $(v_dump_freq) stretch_sheet${out_ext}.data id type x y z
# dump 3 substrate_contact custom $(v_dump_freq) stretch_substrate_contact${out_ext}.data id type x y z

# ---------- Print procedure schedule ---------- #
# Timestamps
variable relax_steps equal $(floor(v_relax_time/dt))
variable stretch_steps equal $(floor(v_stretch_max_pct/v_stretch_speed_pct/dt))

# Print
print "--------------------"
print "------SCHEDULE------"
print ""
print "--> Relax (step 0, 0 ps)"
print "Time: $(v_relax_steps) steps = $(v_relax_steps*dt) ps" 
print ""
print "--> Stretch sheet (step $(v_relax_steps), $(v_relax_steps*dt) ps)"
print "Amount: $(v_stretch_max_pct) % = $(v_stretch_max_pct*v_S0) ang "
print "Speed: $(v_stretch_speed_pct) %/ps = $(v_stretch_speed) ang/ps"
print "Time:  $(v_stretch_steps) steps = $(v_stretch_steps*dt) ps"
print "--------------------"
print "--------------------"
print ""



# ----------  Relax sheet ---------- #
# Set PB conditions
fix PB_xyz_ave PB_tot aveforce 0 0 0 # Average force (every atom feels same force vector)

print "--> Relax: $(v_relax_steps) timesteps, $(v_relax_steps*dt) ps"
thermo_style custom step time cpu cpuremain temp v_stretch_pct #c_sheet_COM[3] v_sub_sheet_seperation c_sheet_fz
run  $(v_relax_steps) 


# ---------- Stretch sheet ---------- #
# Update fixes
unfix nve
unfix nvt
fix nve free_atoms nve
fix nvt free_atoms langevin ${temp} ${temp} ${damp} 48279
fix ylow_move  PB_ylow move linear 0 $(-v_stretch_speed/2) NULL units box
fix yhigh_move PB_yhigh move linear 0 $(v_stretch_speed/2) NULL units box

print "--> Stretch: $(v_stretch_steps) timesteps, $(v_stretch_steps*dt) ps"
variable S0 equal $(c_PB_yhigh_ymin-c_PB_ylow_ymax) # Lock S0 after relaxing
run $(v_stretch_steps)



